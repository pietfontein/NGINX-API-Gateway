events {
    worker_connections 1024;
}

http {
    # Rate limiting (10 req/sec per IP with burst up to 20)
    limit_req_zone $binary_remote_addr zone=api_rate_limit:10m rate=10r/s;

    # Upstream for load balancing (if scaling API)
    upstream api_backend {
        server api-service:3000;
        # Add more servers here if needed
    }

    server {
        listen 80;

        # Health check endpoint (no auth/rate limiting)
        location /health {
            access_log off;
            proxy_pass http://api_backend/health;
        }

        # Secured API endpoint
        location /api/ {
            # Basic Auth
            auth_basic "API Gateway";
            auth_basic_user_file /etc/nginx/auth/.htpasswd;

            # Rate limiting
            limit_req zone=api_rate_limit burst=20 nodelay;

            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';

            # Proxy to API
            proxy_pass http://api_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Timeouts (customize as needed)
            proxy_connect_timeout 5s;
            proxy_read_timeout 10s;
        }

        # Block direct access to sensitive files
        location ~ /\.ht {
            deny all;
        }
    }
}
